<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>